"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9452],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(r),k=a,m=u["".concat(c,".").concat(k)]||u[k]||d[k]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1635:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={title:"Docker\u3068\u306f\uff1f",description:"Docker\u3068\u306f\u4f55\u304b\u8aac\u660e\u3057\u307e\u3059\u3002",sidebar_label:"Docker\u3068\u306f\uff1f",sidebar_position:1,tags:["\u958b\u767a\u74b0\u5883","Docker"],keywords:["\u958b\u767a\u74b0\u5883","Docker"]},l=void 0,i={unversionedId:"dev_env/docker/docker",id:"dev_env/docker/docker",title:"Docker\u3068\u306f\uff1f",description:"Docker\u3068\u306f\u4f55\u304b\u8aac\u660e\u3057\u307e\u3059\u3002",source:"@site/docs/dev_env/docker/docker.md",sourceDirName:"dev_env/docker",slug:"/dev_env/docker/",permalink:"/docs/dev_env/docker/",draft:!1,tags:[{label:"\u958b\u767a\u74b0\u5883",permalink:"/docs/tags/\u958b\u767a\u74b0\u5883"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:1,frontMatter:{title:"Docker\u3068\u306f\uff1f",description:"Docker\u3068\u306f\u4f55\u304b\u8aac\u660e\u3057\u307e\u3059\u3002",sidebar_label:"Docker\u3068\u306f\uff1f",sidebar_position:1,tags:["\u958b\u767a\u74b0\u5883","Docker"],keywords:["\u958b\u767a\u74b0\u5883","Docker"]},sidebar:"defaultSidebar",previous:{title:"Docker",permalink:"/docs/category/docker"},next:{title:"ML\u30c4\u30fc\u30eb",permalink:"/docs/category/ml\u30c4\u30fc\u30eb"}},c={},s=[{value:"\u6982\u8981",id:"\u6982\u8981",level:2},{value:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5",id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5",level:2},{value:"\u74b0\u5883",id:"\u74b0\u5883",level:3},{value:"Docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",id:"docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",level:3},{value:"\u52d5\u4f5c\u78ba\u8a8d",id:"\u52d5\u4f5c\u78ba\u8a8d",level:3},{value:"option Docker\u3067GPU\u3092\u4f7f\u3046\u5834\u5408",id:"option-docker\u3067gpu\u3092\u4f7f\u3046\u5834\u5408",level:3}],p={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u6982\u8981"},"\u6982\u8981"),(0,a.kt)("p",null,"Docker\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u4eee\u60f3\u5316\u3092\u7528\u3044\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u30fb\u914d\u7f6e\u30fb\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3042\u308b\u3002\n\u3059\u3054\u304f\u3056\u3063\u304f\u308a\u300c\u30d1\u30bd\u30b3\u30f3\u306e\u4e0a\u3067\u4eee\u60f3\u306e\u5225\u306e\u30d1\u30bd\u30b3\u30f3\u3092\u52d5\u304b\u3059\u305f\u3081\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u300d\u3060\u3068\u8003\u3048\u308c\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nDocker\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4f8b\u3048\u3070\u300cWindows\u306e\u4e0a\u3067Ubuntu\u3092\u52d5\u304b\u3059\u300d\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3068\u3066\u3082\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,a.kt)("h2",{id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5"},"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5"),(0,a.kt)("p",null,"Docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002"),(0,a.kt)("h3",{id:"\u74b0\u5883"},"\u74b0\u5883"),(0,a.kt)("p",null,"\u3053\u306e\u8a18\u4e8b\u3067\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"OS: Ubuntu22.04.1LTS")),(0,a.kt)("h3",{id:"docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},"Docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eDocker\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3059\u308b\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get remove docker docker-engine docker.io containerd runc\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Docker\u3092\u52d5\u304b\u3059\u306e\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install \\\nca-certificates \\\ncurl \\\ngnupg \\\nlsb-release\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Docker \u306e\u516c\u5f0f GPG \u9375\u3092\u8ffd\u52a0\u3059\u308b"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'echo \\\n"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Docker Engine\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"(option)\u30e6\u30fc\u30b6\u3092docker group\u306b\u8ffd\u52a0\u3059\u308b\u3002"),(0,a.kt)("p",{parentName:"li"},"sudo \u3092\u4ed8\u3051\u305a\u306b\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo gpasswd -a $USER docker\n")),(0,a.kt)("p",{parentName:"li"},"\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u4e00\u65e6\u51fa\u3066\u3001\u5165\u308a\u76f4\u3059\u3068sudo\u3092\u3064\u3051\u305a\u306bdocker\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002"))),(0,a.kt)("h3",{id:"\u52d5\u4f5c\u78ba\u8a8d"},"\u52d5\u4f5c\u78ba\u8a8d"),(0,a.kt)("p",null,"hello world \u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3057\u3066\u6b63\u5e38\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u305f\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run hello-world\n")),(0,a.kt)("p",null,"\u4ee5\u4e0b\u306e\u3088\u3046\u306b",(0,a.kt)("inlineCode",{parentName:"p"},"Hello from Docker!"),"\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker run hello-world\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n2db29710123e: Pull complete \nDigest: sha256:e18f0a777aefabe047a671ab3ec3eed05414477c951ab1a6f352a06974245fe7\nStatus: Downloaded newer image for hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n")),(0,a.kt)("h3",{id:"option-docker\u3067gpu\u3092\u4f7f\u3046\u5834\u5408"},"[option]"," Docker\u3067GPU\u3092\u4f7f\u3046\u5834\u5408"),(0,a.kt)("p",null,"Docker\u3067GPU\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u5225\u9014\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u305d\u306e\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"NVIDIA\u30c9\u30e9\u30a4\u30d0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b"),(0,a.kt)("p",{parentName:"li"},"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f",(0,a.kt)("a",{parentName:"p",href:"/docs/dev_env/ubuntu/install_cuda#nvidia%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B"},"\u3053\u3061\u3089"),"\u3092\u53c2\u7167\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u518d\u8d77\u52d5\u3059\u308b\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvidia-continer-toolkit \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \\\n&& curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | \\\n    sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n&& curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \\\n    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install -y nvidia-container-toolkit\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u518d\u8d77\u52d5\u3059\u308b\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"GPU\u304c\u8a8d\u8b58\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --gpus all nvidia/cuda:11.7.0-base-ubuntu22.04 nvidia-smi\n")),(0,a.kt)("p",{parentName:"li"},"\u4ee5\u4e0b\u306e\u3088\u3046\u306bGPU\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Thu Nov 24 03:11:00 2022\n +-----------------------------------------------------------------------------+\n | NVIDIA-SMI 525.60.02    Driver Version: 526.98       CUDA Version: 12.0     |\n |-------------------------------+----------------------+----------------------+\n | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n |                               |                      |               MIG M. |\n |===============================+======================+======================|\n |   0  NVIDIA GeForce ...  On   | 00000000:01:00.0  On |                  N/A |\n | 29%   33C    P8     7W / 120W |    852MiB /  6144MiB |      2%      Default |\n |                               |                      |                  N/A |\n +-------------------------------+----------------------+----------------------+\n\n +-----------------------------------------------------------------------------+\n | Processes:                                                                  |\n |  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n |        ID   ID                                                   Usage      |\n |=============================================================================|\n |  No running processes found                                                 |\n +-----------------------------------------------------------------------------+\n")))))}d.isMDXComponent=!0}}]);